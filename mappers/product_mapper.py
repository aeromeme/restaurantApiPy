from domain.entities.product import Product as DomainProduct
from dto.product_dto import CreateProductDTO, ProductDTO
from models.models import Products



# Mapping: DTO -> Domain

def dto_to_domain(product_dto: ProductDTO) -> DomainProduct:
    return DomainProduct(
        id=product_dto.product_id,  # or None if auto-generated by DB
        name=product_dto.product_name,
        price=float(product_dto.price),
        stock_quantity=product_dto.stock_quantity,
        category_id=product_dto.category_id
    )
def create_dto_to_domain(product_dto: CreateProductDTO) -> DomainProduct:
    return DomainProduct(
        id=None,  # New product, so ID is not set
        name=product_dto.product_name,
        price=float(product_dto.price),
        stock_quantity=product_dto.stock_quantity,
        category_id=product_dto.category_id
    )

def domain_to_orm(domain_product: DomainProduct) -> Products:
    return Products(
        ProductName=domain_product.name,
        Price=domain_product.price,
        StockQuantity=domain_product.stock_quantity,
        CategoryID=domain_product.category_id
    )

def orm_to_domain(product: Products) -> DomainProduct:
    return DomainProduct(
        id=product.ProductID,
        name=product.ProductName,
        price=float(product.Price),
        stock_quantity=product.StockQuantity,
        category_id=product.CategoryID
    )
